<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="18" tokens="47">
<file line="258" path="/home/vagrant/django/django/core/management/sql.py"/>
<file line="235" path="/home/vagrant/django/django/core/management/sql.py"/>
<codefragment>
<![CDATA[
    for app_config in apps.get_app_configs():
        if app_config.models_module is None:
            continue
        if verbosity >= 2:
            print("Running post-migrate handlers for application %s" % app_config.label)
        models.signals.post_migrate.send(
            sender=app_config,
            app_config=app_config,
            verbosity=verbosity,
            interactive=interactive,
            using=db)
        # For backwards-compatibility -- remove in Django 1.9.
        models.signals.post_syncdb.send(
            sender=app_config.models_module,
            app=app_config.models_module,
            created_models=created_models,
            verbosity=verbosity,
            interactive=interactive,
            db=db)
]]>
</codefragment>
</duplication>
<duplication lines="6" tokens="26">
<file line="150" path="/home/vagrant/django/django/core/management/sql.py"/>
<file line="161" path="/home/vagrant/django/django/core/management/sql.py"/>
<codefragment>
<![CDATA[
def sql_indexes(app_config, style, connection):
    "Returns a list of the CREATE INDEX SQL statements for all models in the given app."


    check_for_migrations(app_config, connection)


    output = []
    for model in router.get_migratable_models(app_config, connection.alias, include_auto_created=True):
        output.extend(connection.creation.sql_indexes_for_model(model, style))
    return output
]]>
</codefragment>
</duplication>
</pmd-cpd>
